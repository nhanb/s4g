package main

import (
	"bufio"
	"fmt"

	"go.imnhan.com/webmaker2000/writablefs"
)

const ManifestPath = "manifest.txt"

// Write list of files generated by webmaker2000
func WriteManifest(fsys writablefs.FS, files map[string]bool) {
	content := ""

	for path := range files {
		content += path + "\n"
	}

	fsys.WriteFile(ManifestPath, []byte(content))
}

// Read list of old generated files from the manifest file,
// then delete those that are no longer relevant.
func DeleteOldGeneratedFiles(fsys writablefs.FS, currentFiles map[string]bool) {
	oldFiles := readManifest(fsys)
	numRemovals := 0

	for path := range oldFiles {
		_, ok := currentFiles[path]
		if !ok {
			fsys.RemoveAll(path)
			numRemovals += 1
			fmt.Println("Removed", path)
		}
	}

	if numRemovals > 0 {
		fmt.Printf("Removed %d outdated files\n", numRemovals)
	}
}

func readManifest(fsys writablefs.FS) map[string]bool {
	result := make(map[string]bool)

	f, err := fsys.Open(ManifestPath)
	if err != nil {
		return result
	}
	defer f.Close()

	s := bufio.NewScanner(f)
	for s.Scan() {
		result[s.Text()] = true
	}
	return result
}
